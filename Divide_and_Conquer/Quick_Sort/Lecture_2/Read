
Given array : arr = {7 , 5 , 3 , 1 , 9 , 4}

Let the pivot element as 4 and partition the array so that
left part of the array will be less than 4 and right part of the array
should be greater than 4.

i.e from the partition function we will get idx.

Then we will sort the array from 0 to idx-1 and idx+1 to arr.length-1

and again we will choose a PivotElement in the left part of 4 and right part of 4.


                 arr = {7 , 5 , 3 , 1 , 9 , 4}
                          |
                          |
                          V

                  3 , 1 , 4 , 5 , 9 , 7
                       idx = 2        ---------------> After first Partition
                          |
     low = 0            /   \     low = 3
     high = 1          /     \    high = 5
                      /       \
                  1 , 3       5 , 7 , 9
                  idx = 0     idx = 4   ---------------> After second and third Partition
                    |               |
                  /   \           /   \
                 /     \         /     \
          low = 0   low = 1     low = 3  low = 5
          high = -1 high = 1    high = 3 high = 5
                 return                   \
                  |                        \
      Further partition not possible        \
      in both the cases.                     \
                                              \
                                               |
                                               |
                                            Further partition not possible
                                            in both the cases.
                                            As base case meets.
                                            return


     Since, we had made changes in the original array i.e

     ans = {1 , 3 , 4 , 5 , 7 , 9}


